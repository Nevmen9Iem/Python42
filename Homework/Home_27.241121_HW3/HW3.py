'''Системи контролю версій. Частина 1'''
from os import mkdir

'''Завдання 1
Встановіть і налаштуйте на своєму локальному комп'ютері Git.'''



'''Завдання 2
Створіть папку з двома підпапками. У кожну папку додайте кілька файлів.'''

# mkdir HW
# cd HW/
# mkdir -p {Homework1,Homework2}
# cd Homework1
# touch file1.py
# touch file2.py
# cd ..
# cd Homework2
# touch file3.py
# touch file4.py

'''Завдання 3
Створіть репозиторій у головній папці.'''

# cd ../..
# git init

'''Завдання 4
Додайте вміст двох підпапок в індекс репозиторія за допомогою команди: git add'''

# git add .

'''Завдання 5
Створіть commit на підставі підпапок, доданих в індекс. Використайте команду: git commit'''

# git commit -m "Завдання 5"

'''Завдання 6
Змініть вміст одного з файлів у папці та створіть commit з новими даними. '''

# git commit -m "Завдання 6"

'''Завдання 7
Створіть нову підпапку, наповніть її даними. Після наповнення створіть commit із вмістом нової папки.'''

# mkdir Homework3
# cd Homework3
# touch 'file5.py'
# touch 'file6.py'
# touch 'file7.py'
# git add .
# git commit -m "7"

'''Завдання 8
Внесіть зміни у вміст файлу в новій папці, збережіть зміни (не створюйте новий commit). 
Скасуйте зміни в локальній копії файлу за допомогою команди: git checkout'''

#git checkout -- 'file5.py'

'''Завдання 9
Внесіть зміни у вміст файлу в новій папці, додайте зміни в індекс (не створюйте новий commit). 
Скасуйте зміни в індексі за допомогою команди: git reset'''

# git add 'file6.py'
# git reset HEAD~1

'''Завдання 10
Внесіть зміни у вміст файлу в новій папці, додайте зміни в індекс, створіть новий commit. 
Скасуйте зміни в останньому commit шляхом створення нового commit за допомогою команди: git revert'''

# git add 'file7.py'
# git revert -- HEAD~1

'''Завдання 11
Видаліть кілька останніх commit. Використайте команду: git reset з опцією --hard'''

# git reset --hard HEAD~1

'''Завдання 12
Внесіть зміни в останній commit, не створюючи нового. Використайте: git commit з ключем --amend'''

# git commit --amend -m "Завдання 5"